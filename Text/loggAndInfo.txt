1. Parse raw text files


java -Xmx18G -cp BibCapResearch.jar BibCap.PlayGroundBibCapWriter
start parsing
Loading Rake..
Getting doc_id, UT, title and source and citations in pass one..
Running custom RAKE keyword extraction algorithm on title
Records created in pass 1: 955661

Getting abstracts in pass two..
Running RAKE on abstracts.. Also saving simple Bag-of-Words..
Abstracts added to 937765 records in pass two

Getting cited references in pass 3..
Creating 4 indexing keys per cited reference..

References added to 955661 records in pass 3
202916 reference ignored: noise, in press etc. See badReferences.txt
Getting Subject categories in pass 4

955661 UT:s with WC:s (inc 'NO-CATEGORY-NAME' read, now matching..
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
missing category, calling .setConsideredRecord(false)!
955646 records matched = final data set (no..)
total size: 955661
Consider running java -cp *.jar Persistor.runCompactOnMVStore
Done. That took: 2589.292. Now writing to file
# mappings:  955661
1 of the 4 problmatic records removed
1 of the 4 problmatic records removed
1 of the 4 problmatic records removed
1 of the 4 problmatic records removed
new # mappings:  955642  ( +4 =955646 = 955646)

****************FINAL SET: 955642******************

2. compacting DB

java -cp BibCapResearch.jar Persistor.runCompactOnMVStore mappy.db

2.1 dumping to text

java -cp BibCapResearch.jar BibCap.BibCapRecordsDumpToText mappy.db

####potential check high freq simple tokens for adding to custom stopwordlist###

java -cp BibCapResearch.jar NLP.PlaygroundCustomStopWords mappy.db

#


3. Create groups references based on similarity and map to indices

java -Xmx18G -cp BibCapResearch.jar Index.WriteCitedReferencesToIndices mappy.db 0.925

4. Map terms to indices

java -Xmx18G -cp BibCapResearch.jar Index.WriteTermsToIndices mappy.db


5. Create vectors (terms) ONE-INDEXED!!

java -Xmx10G -cp BibCapResearch.jar Index.ToClutoTerms mappy.db termsToIntegers.txt

Max dim (one indexed) is: 9050424
Documents/rows: 955646
Features/column: 9050424
nnz (#non zero values): 45923730
IDF weighting..
Normalizing


6. Create vectors (cited refs)

java -Xmx10G -cp BibCapResearch.jar Index.ToClutoCR mappy.db referencesToIntegersThreshold0.925.txt

Max dim (one indexed) is: 12317063
Documents/rows: 955646
Features/column: 12317063
nnz (#non zero values): 31313038

7. Now switch no linux and run knng --> see scripts *batch.sh

#first order similarities, terms, l2 norm (i.e., cosine sim) and tf-idf scaled
./knng -k=150 -alpha=6 -enh=10 -scale -norm=2 -ftmRead=clu -ftmWrite=clu l2knn simpleTermVectors.clu firstOrderSimpleTerms.clu
./knng -k=150 -alpha=6 -enh=10 -scale -norm=2 -ftmRead=clu -ftmWrite=clu l2knn complexTermVectors.clu firstOrderComplexTerms.clu
./knng -k=150 -alpha=6 -enh=10 -scale -norm=2 -ftmRead=clu -ftmWrite=clu l2knn simpleCitedRefVectors.clu firstOrderSimpleCitedRef.clu



9. compare top docs..

java -cp BibCapResearch.jar Experiments.SimChecker secondOrderSimCitedRefsK150.clu

9. create SC-baselie

java -cp BibCapResearch.jar Experiments.BaseLineWoS mappy.db

10. run parameter search

java -Xmx11g -cp BibCapResearch.jar Experiments.BaseLineSim mappy.db firstOrderSimpleCitedRef.clu firstOrderSimpleTerms.clu

11. run specific

java -Xmx11g -cp BibCapResearch.jar Experiments.BaseLineItemOrientedSpecific mappy.db firstOrderSimpleCitedRef.clu firstOrderSimpleTerms.clu 0.7 15


11. cluster refs

java -Xmx11g -cp BibCapResearch.jar Experiments.BaseLineClusters


#contour in R
parameterSearch <- read.table("ParameterSearch.txt")
View(parameterSearch)
colnames(parameterSearch) <- c("Delta", "K", "RES")

Z <- acast(parameterSearch, Delta ~ K )
contour(x=c(0,0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95,1),y=seq(10,150,by=10),Z,xlab="delta", ylab="k", main="proportion of the total variance explained")



